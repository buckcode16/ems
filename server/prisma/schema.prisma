// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  createdAt DateTime
  updatedAt DateTime
  username String
  email String @unique
  passwordHash String
  profilePic String?
  lastOnline DateTime
  participants Participant[]
  messages Message[]
}

model Conversation {
  id Int @id @default(autoincrement())
  title String?
  avatar String?
  createdAt DateTime
  isGroup Boolean @default(false)
  participants Participant[]
  messages Message[]
}

model Participant {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  conversation Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  joinedAt DateTime
  leftAt DateTime?
}

model Message {
  id Int @id @default(autoincrement())
  conversation Conversation @relation(fields: [conversationId], references: [id])
  conversationId Int
  sender User @relation(fields: [senderId], references: [id])
  senderId Int
  content String
  createdAt DateTime
  type MessageType
  attachments Attachment[]
  usersTag Int[]
  clientOffset String @unique
  replyMessageId Int?
}

model Attachment {
  id Int @id @default(autoincrement())
  message Message @relation(fields: [messageId], references: [id])
  messageId Int
  extension String
  url String
  fileSize Int
  fileType String
}

enum MessageType {
  TEXT
  IMAGE
  CODE
  POLL
  FILE
  VIDEO
}